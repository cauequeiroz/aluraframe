{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","url","fetch","then","_handleErrors","res","json","dado","headers","method","body","JSON","stringify","ok","Error","statusText"],"mappings":";;;;;;IAAMA,W;;;;;;;4BAEEC,G,EAAK;AAAA;;AAEL,mBAAOC,MAAMD,GAAN,EACFE,IADE,CACG;AAAA,uBAAO,MAAKC,aAAL,CAAmBC,GAAnB,CAAP;AAAA,aADH,EAEFF,IAFE,CAEG;AAAA,uBAAOE,IAAIC,IAAJ,EAAP;AAAA,aAFH,CAAP;AAGH;;;6BAEIL,G,EAAKM,I,EAAM;AAAA;;AAEZ,mBAAOL,MAAMD,GAAN,EAAW;AACdO,yBAAS,EAAE,gBAAgB,kBAAlB,EADK;AAEdC,wBAAQ,MAFM;AAGdC,sBAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHQ,aAAX,EAKNJ,IALM,CAKD;AAAA,uBAAO,OAAKC,aAAL,CAAmBC,GAAnB,CAAP;AAAA,aALC,CAAP;AAMH;;;sCAEaA,G,EAAK;;AAEf,gBAAK,CAACA,IAAIQ,EAAV,EAAe,MAAM,IAAIC,KAAJ,CAAUT,IAAIU,UAAd,CAAN;AACf,mBAAOV,GAAP;AACH","file":"HttpService.js","sourcesContent":["class HttpService {\n\n    get(url) {\n\n        return fetch(url)\n            .then(res => this._handleErrors(res))\n            .then(res => res.json());\n    }\n\n    post(url, dado) {\n\n        return fetch(url, {\n            headers: { 'Content-type': 'application/json' },\n            method: 'post',\n            body: JSON.stringify(dado)\n        })\n        .then(res => this._handleErrors(res));\n    }\n\n    _handleErrors(res) {\n        \n        if ( !res.ok ) throw new Error(res.statusText);\n        return res;\n    }\n}"]}